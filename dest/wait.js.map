{"version":3,"sources":["node_modules/browser-pack/_prelude.js","wait.js","node_modules/es6-promise/dist/es6-promise.js","node_modules/process/browser.js","src/wait.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","process","global","lib$es6$promise$utils$$objectOrFunction","x","lib$es6$promise$utils$$isFunction","lib$es6$promise$utils$$isMaybeThenable","lib$es6$promise$asap$$setScheduler","scheduleFn","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$asap$$setAsap","asapFn","lib$es6$promise$asap$$asap","lib$es6$promise$asap$$useNextTick","nextTick","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$useVertxTimer","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$useMutationObserver","iterations","observer","lib$es6$promise$asap$$BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","lib$es6$promise$asap$$useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","lib$es6$promise$asap$$useSetTimeout","setTimeout","lib$es6$promise$asap$$len","callback","lib$es6$promise$asap$$queue","arg","undefined","lib$es6$promise$asap$$attemptVertx","vertx","runOnLoop","runOnContext","lib$es6$promise$$internal$$noop","lib$es6$promise$$internal$$selfFulfillment","TypeError","lib$es6$promise$$internal$$cannotReturnOwn","lib$es6$promise$$internal$$getThen","promise","then","error","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$tryThen","value","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$handleForeignThenable","thenable","sealed","lib$es6$promise$$internal$$resolve","lib$es6$promise$$internal$$fulfill","reason","lib$es6$promise$$internal$$reject","_label","lib$es6$promise$$internal$$handleOwnThenable","_state","lib$es6$promise$$internal$$FULFILLED","_result","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$subscribe","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","constructor","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","lib$es6$promise$$internal$$PENDING","_subscribers","parent","child","onFulfillment","onRejection","subscribers","settled","detail","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$ErrorObject","this","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$initializePromise","resolver","lib$es6$promise$enumerator$$Enumerator","Constructor","input","enumerator","_instanceConstructor","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$es6$promise$promise$all$$all","entries","lib$es6$promise$enumerator$$default","lib$es6$promise$promise$race$$race","lib$es6$promise$utils$$isArray","resolve","lib$es6$promise$promise$resolve$$resolve","object","lib$es6$promise$promise$reject$$reject","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$promise$$Promise","_id","lib$es6$promise$promise$$counter","lib$es6$promise$polyfill$$polyfill","local","self","Function","P","Promise","Object","prototype","toString","cast","lib$es6$promise$promise$$default","lib$es6$promise$utils$$_isArray","Array","isArray","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","_eachEntry","entry","c","_settledAt","_willSettleAt","state","lib$es6$promise$promise$all$$default","lib$es6$promise$promise$race$$default","lib$es6$promise$promise$resolve$$default","lib$es6$promise$promise$reject$$default","all","race","reject","_setScheduler","_setAsap","_asap","result","arguments","catch","lib$es6$promise$polyfill$$default","lib$es6$promise$umd$$ES6Promise","polyfill","define","_process",2,"cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","clearTimeout","Item","fun","array","noop","args","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask",3,"wait","sec","es6-promise"],"mappings":"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","file":"wait.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\nvar Promise = require('es6-promise').Promise;\n\nglobal.wait = function (sec) {\n\n    return new Promise(function (resolve) {\n\n        setTimeout(resolve);\n\n    });\n\n};\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   3.0.2\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // see https://github.com/cujojs/when/issues/410 for details\n      return function() {\n        process.nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertx() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertx();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFulfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFulfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$asap(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\nvar Promise = require('es6-promise').Promise;\n\nglobal.wait = function (sec) {\n\n    return new Promise(function (resolve) {\n\n        setTimeout(resolve);\n\n    });\n\n};\n"],"sourceRoot":"/source/"}